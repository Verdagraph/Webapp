/**
 * Generated by orval v6.31.0 🍺
 * Do not edit manually.
 * Verdagraph Webapp Server
 * Server of the Verdagraph web application.
 * OpenAPI spec version: 0.0.1
 */
import { axiosClient } from '../../../data/customAxios';
import type {
	UserConfirmEmailOpBody,
	UserConfirmPasswordResetOpBody,
	UserCreateOpBody,
	UserLoginOpBody,
	UserRequestEmailConfirmationOpBody,
	UserRequestPasswordResetOpBody,
	UserUpdateOpBody
} from '../../types';

/**
 * Grants an access and refresh token on a correct username and password.
 */
export const userLoginOp = (userLoginOpBody: UserLoginOpBody) => {
	return axiosClient<string>({
		url: `/users/login`,
		method: 'POST',
		headers: { 'Content-Type': 'application/json' },
		data: userLoginOpBody
	});
};
/**
 * Grants an access and refresh token on a valid refresh token.
 */
export const userRefreshOp = () => {
	return axiosClient<string>({ url: `/users/refresh`, method: 'POST' });
};
/**
 * Creates a new user.
 */
export const userCreateOp = (userCreateOpBody: UserCreateOpBody) => {
	return axiosClient<string>({
		url: `/users/create`,
		method: 'POST',
		headers: { 'Content-Type': 'application/json' },
		data: userCreateOpBody
	});
};
/**
 * Updates a user's username, email, or password
 */
export const userUpdateOp = (userUpdateOpBody: UserUpdateOpBody) => {
	return axiosClient<string>({
		url: `/users/update`,
		method: 'POST',
		headers: { 'Content-Type': 'application/json' },
		data: userUpdateOpBody
	});
};
/**
 * Requests an email confirmation be sent to the email address.
 */
export const userRequestEmailConfirmationOp = (
	userRequestEmailConfirmationOpBody: UserRequestEmailConfirmationOpBody
) => {
	return axiosClient<string>({
		url: `/users/requestEmailConfirmationOp`,
		method: 'POST',
		headers: { 'Content-Type': 'application/json' },
		data: userRequestEmailConfirmationOpBody
	});
};
/**
 * Confirms an email confirmation and verifies the email.
 */
export const userConfirmEmailOp = (userConfirmEmailOpBody: UserConfirmEmailOpBody) => {
	return axiosClient<string>({
		url: `/users/confirmEmail`,
		method: 'POST',
		headers: { 'Content-Type': 'application/json' },
		data: userConfirmEmailOpBody
	});
};
/**
 * Requests a password reset confirmation be sent to the email.
 */
export const userRequestPasswordResetOp = (
	userRequestPasswordResetOpBody: UserRequestPasswordResetOpBody
) => {
	return axiosClient<string>({
		url: `/users/requestPasswordReset`,
		method: 'POST',
		headers: { 'Content-Type': 'application/json' },
		data: userRequestPasswordResetOpBody
	});
};
/**
 * Confirms a password reset and changes the user's password
 */
export const userConfirmPasswordResetOp = (
	userConfirmPasswordResetOpBody: UserConfirmPasswordResetOpBody
) => {
	return axiosClient<string>({
		url: `/users/confirmPasswordReset`,
		method: 'POST',
		headers: { 'Content-Type': 'application/json' },
		data: userConfirmPasswordResetOpBody
	});
};
export type UserLoginOpResult = NonNullable<Awaited<ReturnType<typeof userLoginOp>>>;
export type UserRefreshOpResult = NonNullable<
	Awaited<ReturnType<typeof userRefreshOp>>
>;
export type UserCreateOpResult = NonNullable<Awaited<ReturnType<typeof userCreateOp>>>;
export type UserUpdateOpResult = NonNullable<Awaited<ReturnType<typeof userUpdateOp>>>;
export type UserRequestEmailConfirmationOpResult = NonNullable<
	Awaited<ReturnType<typeof userRequestEmailConfirmationOp>>
>;
export type UserConfirmEmailOpResult = NonNullable<
	Awaited<ReturnType<typeof userConfirmEmailOp>>
>;
export type UserRequestPasswordResetOpResult = NonNullable<
	Awaited<ReturnType<typeof userRequestPasswordResetOp>>
>;
export type UserConfirmPasswordResetOpResult = NonNullable<
	Awaited<ReturnType<typeof userConfirmPasswordResetOp>>
>;
