components:
  schemas:
    AccessInfoResult:
      properties:
        expiry_time_seconds:
          type: number
      required:
      - expiry_time_seconds
      title: AccessInfoResult
      type: object
    AnnualLifecycleProfile:
      properties:
        first_to_last_harvest:
          oneOf:
          - type: 'null'
          - type: number
        germ_to_first_harvest:
          oneOf:
          - type: 'null'
          - type: number
        germ_to_transplant:
          oneOf:
          - type: 'null'
          - type: number
        seed_to_germ:
          oneOf:
          - type: 'null'
          - type: number
      required: []
      title: AnnualLifecycleProfile
      type: object
    AnnualLifecycleProfileUpdateCommand:
      properties:
        first_to_last_harvest:
          oneOf:
          - type: 'null'
          - description: The expected amount of days the first and last harvest of
              a plant. For plants which only have one harvest, this values is zero.
              Must be between 0 and 120 days.
            type: number
        germ_to_first_harvest:
          oneOf:
          - type: 'null'
          - description: The expected amount of days the germination of a seed to
              when it will be ready for a harvest. Must be between 0 and 200 days.
            type: number
        germ_to_transplant:
          oneOf:
          - type: 'null'
          - description: The expected amount of days from the germination of a seed
              to when it will be ready for transplant. For cultivars which are not
              able to be transplanted, this value is unused. Must be between 0 and
              200 days.
            type: number
        seed_to_germ:
          oneOf:
          - type: 'null'
          - description: The expected amount of days from starting a seed to its germination.
              Must be between 0 and 60 days.
            type: number
      required: []
      title: AnnualLifecycleProfileUpdateCommand
      type: object
    Coordinate:
      properties:
        x:
          type: number
        y:
          type: number
        z:
          oneOf:
          - type: 'null'
          - type: number
      required:
      - x
      - y
      title: Coordinate
      type: object
    CoordinateCreateUpdateCommand:
      properties:
        x:
          type: number
        y:
          type: number
        z:
          oneOf:
          - type: 'null'
          - type: number
      required:
      - x
      - y
      title: CoordinateCreateUpdateCommand
      type: object
    CultivarAttributeSet:
      properties:
        annual_lifecycle_profile:
          $ref: '#/components/schemas/AnnualLifecycleProfile'
        frost_date_planting_window_profile:
          $ref: '#/components/schemas/FrostDatePlantingWindowProfile'
        origin_profile:
          $ref: '#/components/schemas/OriginProfile'
      required: []
      title: CultivarAttributeSet
      type: object
    CultivarAttributeUpdateCommand:
      properties:
        annual_lifecycle_profile:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/AnnualLifecycleProfileUpdateCommand'
        frost_date_planting_window_profile:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/FrostDatePlantingWindowProfileUpdateCommand'
        origin_profile:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/OriginProfileUpdateCommand'
      required: []
      title: CultivarAttributeUpdateCommand
      type: object
    CultivarCollectionCreateCommand:
      properties:
        description:
          default: ''
          description: The description of the collection. Must be at most 1400 characters
          maxLength: 1400
          type: string
        garden_ref:
          oneOf:
          - type: 'null'
          - format: uuid
            type: string
        name:
          description: The name of the collection. Must be between 3 and 50 characters
            long and contain only alphanumeric characters, spaces, hyphens, and underscores.
          maxLength: 50
          minLength: 3
          pattern: '[0-9A-Za-z _-]+'
          type: string
        parent_ref:
          oneOf:
          - type: 'null'
          - format: uuid
            type: string
        tags:
          default: []
          description: A set of metadata tags. Each tag must be at most 150 characters
            and contain only alphanumeric characters and spaces. There may be at most
            150 tags.
          items:
            description: A metadata tag. Must be at most 150 characters and contain
              only alphanumeric characters and spaces
            maxLength: 150
            pattern: '[0-9A-Za-z ]+'
            type: string
          maxLength: 150
          type: array
        visibility:
          default: private
          enum:
          - private
          - unlisted
          - public
          type: string
      required:
      - name
      title: CultivarCollectionCreateCommand
      type: object
    CultivarCollectionDeleteCommand:
      properties:
        collection_ref:
          format: uuid
          type: string
      required:
      - collection_ref
      title: CultivarCollectionDeleteCommand
      type: object
    CultivarCollectionDuplicateCommand:
      properties:
        garden_ref:
          oneOf:
          - type: 'null'
          - format: uuid
            type: string
        source_collection_ref:
          format: uuid
          type: string
      required:
      - source_collection_ref
      title: CultivarCollectionDuplicateCommand
      type: object
    CultivarCollectionFullSchema:
      properties:
        created_at:
          format: date-time
          type: string
        cultivars:
          items:
            $ref: '#/components/schemas/CultivarSchema'
          type: array
        description:
          type: string
        garden_ref:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/RefSchema'
        id:
          format: uuid
          type: string
        name:
          type: string
        parent_ref:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/RefSchema'
        slug:
          type: string
        tags:
          items:
            type: string
          type: array
        user_ref:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/RefSchema'
        visibility:
          enum:
          - private
          - unlisted
          - public
          type: string
      required:
      - created_at
      - cultivars
      - description
      - id
      - name
      - slug
      - tags
      - visibility
      title: CultivarCollectionFullSchema
      type: object
    CultivarCollectionGetByClientResult:
      properties:
        collections:
          items:
            $ref: '#/components/schemas/CultivarCollectionPartialSchema'
          type: array
      required:
      - collections
      title: CultivarCollectionGetByClientResult
      type: object
    CultivarCollectionGetByGardenResult:
      properties:
        active_collection:
          $ref: '#/components/schemas/RefSchema'
        collections:
          items:
            $ref: '#/components/schemas/CultivarCollectionPartialSchema'
          type: array
      required:
      - active_collection
      - collections
      title: CultivarCollectionGetByGardenResult
      type: object
    CultivarCollectionMergeCommand:
      properties:
        source_collection_ref:
          format: uuid
          type: string
        target_collection_ref:
          format: uuid
          type: string
      required:
      - source_collection_ref
      - target_collection_ref
      title: CultivarCollectionMergeCommand
      type: object
    CultivarCollectionPartialSchema:
      properties:
        created_at:
          format: date-time
          type: string
        description:
          type: string
        garden_ref:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/RefSchema'
        id:
          format: uuid
          type: string
        name:
          type: string
        parent_ref:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/RefSchema'
        slug:
          type: string
        tags:
          items:
            type: string
          type: array
        user_ref:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/RefSchema'
        visibility:
          enum:
          - private
          - unlisted
          - public
          type: string
      required:
      - created_at
      - description
      - id
      - name
      - slug
      - tags
      - visibility
      title: CultivarCollectionPartialSchema
      type: object
    CultivarCollectionUpdateCommand:
      properties:
        collection_ref:
          format: uuid
          type: string
        description:
          oneOf:
          - type: 'null'
          - description: The description of the collection. Must be at most 1400 characters
            maxLength: 1400
            type: string
        name:
          oneOf:
          - type: 'null'
          - description: The name of the collection. Must be between 3 and 50 characters
              long and contain only alphanumeric characters, spaces, hyphens, and
              underscores.
            maxLength: 50
            minLength: 3
            pattern: '[0-9A-Za-z _-]+'
            type: string
        parent_ref:
          oneOf:
          - type: 'null'
          - format: uuid
            type: string
        remove_parent:
          default: false
          type: boolean
        tags:
          oneOf:
          - type: 'null'
          - description: A set of metadata tags. Each tag must be at most 150 characters
              and contain only alphanumeric characters and spaces. There may be at
              most 150 tags.
            items:
              description: A metadata tag. Must be at most 150 characters and contain
                only alphanumeric characters and spaces
              maxLength: 150
              pattern: '[0-9A-Za-z ]+'
              type: string
            maxLength: 150
            type: array
        visibility:
          enum:
          - private
          - unlisted
          - public
          - null
          type:
          - 'null'
          - string
      required:
      - collection_ref
      title: CultivarCollectionUpdateCommand
      type: object
    CultivarCreateCommand:
      properties:
        collection_ref:
          format: uuid
          type: string
        description:
          oneOf:
          - type: 'null'
          - description: A description of this plant species. Must be at most 1400
              characters
            maxLength: 1400
            type: string
        key:
          oneOf:
          - type: 'null'
          - description: A very short abbreviation for this plant species. Must be
              between 1 and 6 characters long and contain only alphanumeric characters.
            maxLength: 6
            minLength: 1
            pattern: '[0-9A-Za-z]+'
            type: string
        names:
          description: A set of common names associated with this plant species. Each
            name must be between 3 and 30 characters long and contain only alphanumeric
            characters and spaces. There must be at least 1 name and a maximum of
            10 names
          items:
            description: A common name of this plant species. Must be between 3 and
              30 characters long and contain only alphanumeric characters, spaces,
              hyphens, and underscores.
            maxLength: 30
            minLength: 3
            pattern: '[0-9A-Za-z _-]+'
            type: string
          maxLength: 10
          type: array
        parent_id:
          oneOf:
          - type: 'null'
          - format: uuid
            type: string
        scientific_name:
          oneOf:
          - type: 'null'
          - description: The scientific name of this plant species. Must be at most
              60 characters
            maxLength: 60
            type: string
      required:
      - collection_ref
      - names
      title: CultivarCreateCommand
      type: object
    CultivarDeleteCommand:
      properties:
        collection_ref:
          format: uuid
          type: string
        cultivar_id:
          format: uuid
          type: string
      required:
      - collection_ref
      - cultivar_id
      title: CultivarDeleteCommand
      type: object
    CultivarSchema:
      properties:
        attributes:
          $ref: '#/components/schemas/CultivarAttributeSet'
        created_at:
          format: date-time
          type: string
        description:
          type: string
        id:
          format: uuid
          type: string
        key:
          type: string
        name:
          type: string
        names:
          items:
            type: string
          type: array
        parent_id:
          oneOf:
          - type: 'null'
          - format: uuid
            type: string
        scientific_name:
          type: string
      required:
      - attributes
      - created_at
      - description
      - id
      - key
      - name
      - names
      - scientific_name
      title: CultivarSchema
      type: object
    CultivarUpdateCommand:
      properties:
        attributes:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/CultivarAttributeUpdateCommand'
        collection_ref:
          format: uuid
          type: string
        cultivar_id:
          format: uuid
          type: string
        description:
          oneOf:
          - type: 'null'
          - description: A description of this plant species. Must be at most 1400
              characters
            maxLength: 1400
            type: string
        key:
          oneOf:
          - type: 'null'
          - description: A very short abbreviation for this plant species. Must be
              between 1 and 6 characters long and contain only alphanumeric characters.
            maxLength: 6
            minLength: 1
            pattern: '[0-9A-Za-z]+'
            type: string
        names:
          oneOf:
          - type: 'null'
          - description: A set of common names associated with this plant species.
              Each name must be between 3 and 30 characters long and contain only
              alphanumeric characters and spaces. There must be at least 1 name and
              a maximum of 10 names
            items:
              description: A common name of this plant species. Must be between 3
                and 30 characters long and contain only alphanumeric characters, spaces,
                hyphens, and underscores.
              maxLength: 30
              minLength: 3
              pattern: '[0-9A-Za-z _-]+'
              type: string
            maxLength: 10
            type: array
        parent_id:
          oneOf:
          - type: 'null'
          - format: uuid
            type: string
        remove_parent:
          default: false
          type: boolean
        scientific_name:
          oneOf:
          - type: 'null'
          - description: The scientific name of this plant species. Must be at most
              60 characters
            maxLength: 60
            type: string
      required:
      - collection_ref
      - cultivar_id
      title: CultivarUpdateCommand
      type: object
    EllipseAttributes:
      properties:
        height:
          oneOf:
          - type: 'null'
          - type: number
        width:
          type: number
      required:
      - width
      title: EllipseAttributes
      type: object
    EllipseAttributesCreateUpdateCommand:
      properties:
        height:
          oneOf:
          - type: 'null'
          - type: number
        width:
          type: number
      required:
      - width
      title: EllipseAttributesCreateUpdateCommand
      type: object
    FrostDatePlantingWindowProfile:
      properties:
        first_frost_window_close:
          oneOf:
          - type: 'null'
          - type: number
        first_frost_window_open:
          oneOf:
          - type: 'null'
          - type: number
        last_frost_window_close:
          oneOf:
          - type: 'null'
          - type: number
        last_frost_window_open:
          oneOf:
          - type: 'null'
          - type: number
      required: []
      title: FrostDatePlantingWindowProfile
      type: object
    FrostDatePlantingWindowProfileUpdateCommand:
      properties:
        first_frost_window_close:
          oneOf:
          - type: 'null'
          - description: The amount of days between the first frost and the end of
              the planting window. Positive values indicate the window begins after
              the first frost date. For example, a value of 15 indicates the cultivar
              must be planted before 15 days after the first frost date. Must be between
              -200 and 200 days.
            type: number
        first_frost_window_open:
          oneOf:
          - type: 'null'
          - description: The amount of days between the first frost and the beginning
              of the planting window. Positive values indicate the window begins after
              the first frost date. For example, a value of -15 indicates the cultivar
              may be planted 15 days before the first frost date. Must be between
              -200 and 200 days.
            type: number
        last_frost_window_close:
          oneOf:
          - type: 'null'
          - description: The amount of days between the last frost and the end of
              the planting window. Positive values indicate the window begins after
              the last frost date. For example, a value of 15 indicates the cultivar
              must be planted before 15 days after the last frost date. Must be between
              -200 and 200 days.
            type: number
        last_frost_window_open:
          oneOf:
          - type: 'null'
          - description: The amount of days between the last frost and the beginning
              of the planting window. Positive values indicate the window begins after
              the last frost date. For example, a value of -15 indicates the cultivar
              may be planted 15 days before the last frost date. Must be between -200
              and 200 days.
            type: number
      required: []
      title: FrostDatePlantingWindowProfileUpdateCommand
      type: object
    GardenAssociatedPartialsResult:
      properties:
        admin_memberships:
          items:
            format: uuid
            type: string
          type: array
        edit_memberships:
          items:
            format: uuid
            type: string
          type: array
        favorites:
          items:
            format: uuid
            type: string
          type: array
        gardens:
          items:
            $ref: '#/components/schemas/GardenPartialSchema'
          type: array
        view_memberships:
          items:
            format: uuid
            type: string
          type: array
      required:
      - admin_memberships
      - edit_memberships
      - favorites
      - gardens
      - view_memberships
      title: GardenAssociatedPartialsResult
      type: object
    GardenCreateCommand:
      properties:
        admin_usernames:
          default: []
          description: A maximum of 10 users can be invited at once
          items:
            description: Must be between 3 and 50 characters long and contain only
              alphanumeric characters and underscores. Must be unique
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9_]*$
            type: string
          maxLength: 10
          type: array
        description:
          default: ''
          description: Must be at most 1400 characters
          maxLength: 1400
          type: string
        editor_usernames:
          default: []
          description: A maximum of 10 users can be invited at once
          items:
            description: Must be between 3 and 50 characters long and contain only
              alphanumeric characters and underscores. Must be unique
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9_]*$
            type: string
          maxLength: 10
          type: array
        key:
          oneOf:
          - type: 'null'
          - description: Must be between 4 and 16 characters long and contain only
              alphanumeric characters and hyphens
            maxLength: 16
            minLength: 4
            pattern: '[0-9A-Za-z-]+'
            type: string
        name:
          description: Must be between 2 and 50 characters long and contain only alphanumeric
            characters and spaces
          maxLength: 50
          minLength: 2
          pattern: '[0-9A-Za-z ]+'
          type: string
        viewer_usernames:
          default: []
          description: A maximum of 10 users can be invited at once
          items:
            description: Must be between 3 and 50 characters long and contain only
              alphanumeric characters and underscores. Must be unique
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9_]*$
            type: string
          maxLength: 10
          type: array
        visibility:
          default: private
          enum:
          - private
          - unlisted
          - public
          type: string
      required:
      - name
      title: GardenCreateCommand
      type: object
    GardenFullSchema:
      properties:
        creator_ref:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/RefSchema'
        description:
          type: string
        environment_ref:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/RefSchema'
        expired:
          type: boolean
        id:
          format: uuid
          type: string
        key:
          type: string
        memberships:
          items:
            $ref: '#/components/schemas/GardenMembershipFullSchema'
          type: array
        name:
          type: string
        num_memberships:
          type: integer
        visibility:
          enum:
          - private
          - unlisted
          - public
          type: string
      required:
      - description
      - expired
      - id
      - key
      - memberships
      - name
      - num_memberships
      - visibility
      title: GardenFullSchema
      type: object
    GardenMembershipAcceptCommand:
      properties:
        garden_key:
          description: Must be between 4 and 16 characters long and contain only alphanumeric
            characters and hyphens
          maxLength: 16
          minLength: 4
          pattern: '[0-9A-Za-z-]+'
          type: string
      required:
      - garden_key
      title: GardenMembershipAcceptCommand
      type: object
    GardenMembershipCreateCommand:
      properties:
        admin_usernames:
          default: []
          description: A maximum of 10 users can be invited at once
          items:
            description: Must be between 3 and 50 characters long and contain only
              alphanumeric characters and underscores. Must be unique
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9_]*$
            type: string
          maxLength: 10
          type: array
        editor_usernames:
          default: []
          description: A maximum of 10 users can be invited at once
          items:
            description: Must be between 3 and 50 characters long and contain only
              alphanumeric characters and underscores. Must be unique
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9_]*$
            type: string
          maxLength: 10
          type: array
        garden_id:
          format: uuid
          type: string
        viewer_usernames:
          default: []
          description: A maximum of 10 users can be invited at once
          items:
            description: Must be between 3 and 50 characters long and contain only
              alphanumeric characters and underscores. Must be unique
            maxLength: 50
            minLength: 3
            pattern: ^[a-zA-Z0-9_]*$
            type: string
          maxLength: 10
          type: array
      required:
      - garden_id
      title: GardenMembershipCreateCommand
      type: object
    GardenMembershipDeleteCommand:
      properties:
        garden_key:
          description: Must be between 4 and 16 characters long and contain only alphanumeric
            characters and hyphens
          maxLength: 16
          minLength: 4
          pattern: '[0-9A-Za-z-]+'
          type: string
      required:
      - garden_key
      title: GardenMembershipDeleteCommand
      type: object
    GardenMembershipFullSchema:
      properties:
        accepted:
          type: boolean
        created_at:
          format: date-time
          type: string
        favorite:
          type: boolean
        inviter_ref:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/RefSchema'
        role:
          enum:
          - admin
          - editor
          - viewer
          type: string
        user_ref:
          $ref: '#/components/schemas/RefSchema'
      required:
      - accepted
      - created_at
      - favorite
      - role
      - user_ref
      title: GardenMembershipFullSchema
      type: object
    GardenMembershipRevokeCommand:
      properties:
        garden_id:
          format: uuid
          type: string
        user_id:
          format: uuid
          type: string
      required:
      - garden_id
      - user_id
      title: GardenMembershipRevokeCommand
      type: object
    GardenMembershipRoleChangeCommand:
      properties:
        garden_id:
          format: uuid
          type: string
        role:
          enum:
          - admin
          - editor
          - viewer
          type: string
        user_id:
          format: uuid
          type: string
      required:
      - garden_id
      - role
      - user_id
      title: GardenMembershipRoleChangeCommand
      type: object
    GardenPartialSchema:
      properties:
        creator_ref:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/RefSchema'
        id:
          format: uuid
          type: string
        key:
          type: string
        name:
          type: string
        num_memberships:
          type: integer
        visibility:
          enum:
          - private
          - unlisted
          - public
          type: string
      required:
      - id
      - key
      - name
      - num_memberships
      - visibility
      title: GardenPartialSchema
      type: object
    GardenPendingInviteSchema:
      properties:
        expiry_countdown_hours:
          type: integer
        garden:
          $ref: '#/components/schemas/GardenPartialSchema'
        invite:
          $ref: '#/components/schemas/GardenMembershipFullSchema'
      required:
      - expiry_countdown_hours
      - garden
      - invite
      title: GardenPendingInviteSchema
      type: object
    GardenPendingInvitesResult:
      properties:
        pending_invites:
          items:
            $ref: '#/components/schemas/GardenPendingInviteSchema'
          type: array
      required:
      - pending_invites
      title: GardenPendingInvitesResult
      type: object
    GardenUniqueKeyResult:
      properties:
        key:
          type: string
      required:
      - key
      title: GardenUniqueKeyResult
      type: object
    GeometricHistoryCreateUpdateCommand:
      properties:
        geometries:
          items:
            $ref: '#/components/schemas/GeometricHistoryPointCreateUpdateCommand'
          type: array
      required:
      - geometries
      title: GeometricHistoryCreateUpdateCommand
      type: object
    GeometricHistoryPointCreateUpdateCommand:
      properties:
        geometry:
          $ref: '#/components/schemas/GeometryCreateUpdateCommand'
        time:
          oneOf:
          - type: 'null'
          - format: date-time
            type: string
      required:
      - geometry
      title: GeometricHistoryPointCreateUpdateCommand
      type: object
    GeometricHistoryPointSchema:
      properties:
        geometry:
          $ref: '#/components/schemas/GeometrySchema'
        time:
          oneOf:
          - type: 'null'
          - format: date-time
            type: string
      required:
      - geometry
      title: GeometricHistoryPointSchema
      type: object
    GeometricHistorySchema:
      properties:
        geometries:
          items:
            $ref: '#/components/schemas/GeometricHistoryPointSchema'
          type: array
      required:
      - geometries
      title: GeometricHistorySchema
      type: object
    GeometryCreateUpdateCommand:
      properties:
        ellipse_attributes:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/LinesAttributesCreateUpdateCommand'
        lines_attributes:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/EllipseAttributesCreateUpdateCommand'
        polygon_attributes:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/PolygonAttributesCreateUpdateCommand'
        rectangle_attributes:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/RectangleAttributesCreateUpdateCommand'
        scale_factor:
          oneOf:
          - type: 'null'
          - type: number
        type:
          enum:
          - rectangle
          - polygon
          - ellipse
          - lines
          type: string
      required:
      - type
      title: GeometryCreateUpdateCommand
      type: object
    GeometrySchema:
      properties:
        attributes:
          oneOf:
          - $ref: '#/components/schemas/RectangleAttributes'
          - $ref: '#/components/schemas/PolygonAttributes'
          - $ref: '#/components/schemas/LinesAttributes'
          - $ref: '#/components/schemas/EllipseAttributes'
        nulled:
          type: boolean
        rotation:
          type: number
        scale_factor:
          type: number
        type:
          enum:
          - rectangle
          - polygon
          - ellipse
          - lines
          type: string
      required:
      - attributes
      - nulled
      - rotation
      - scale_factor
      - type
      title: GeometrySchema
      type: object
    LinesAttributes:
      properties:
        coordinates:
          items:
            $ref: '#/components/schemas/Coordinate'
          type: array
      required:
      - coordinates
      title: LinesAttributes
      type: object
    LinesAttributesCreateUpdateCommand:
      properties:
        coordinates:
          items:
            $ref: '#/components/schemas/CoordinateCreateUpdateCommand'
          type: array
      required:
      - coordinates
      title: LinesAttributesCreateUpdateCommand
      type: object
    LocationHistorySchema:
      properties:
        locations:
          items:
            $ref: '#/components/schemas/LocationSchema'
          type: array
      required:
      - locations
      title: LocationHistorySchema
      type: object
    LocationSchema:
      properties:
        position:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/Coordinate'
        time:
          oneOf:
          - type: 'null'
          - format: date-time
            type: string
        workspace_ref:
          $ref: '#/components/schemas/RefSchema'
      required:
      - workspace_ref
      title: LocationSchema
      type: object
    OriginProfile:
      properties:
        transplantable:
          oneOf:
          - type: 'null'
          - type: boolean
      required: []
      title: OriginProfile
      type: object
    OriginProfileUpdateCommand:
      properties:
        transplantable:
          oneOf:
          - type: 'null'
          - description: Defines whether a plant may be started as a seed in one location
              and transplanted to another. Some plants, such as carrots, don't tolerate
              transplants, and so must be started directly.
            type: boolean
      required: []
      title: OriginProfileUpdateCommand
      type: object
    PlantingAreaCreateCommand:
      properties:
        description:
          oneOf:
          - type: 'null'
          - description: A description of this planting area. Must be at most 700
              characters
            maxLength: 700
            type: string
        geometry:
          $ref: '#/components/schemas/GeometricHistoryPointCreateUpdateCommand'
        name:
          description: A descriptive name for this planting area. Must be between
            3 and 30 characters long and contain only alphanumeric characters, spaces,
            hyphens, and underscores.
          maxLength: 30
          minLength: 3
          pattern: '[0-9A-Za-z _-]+'
          type: string
        workspace_ref:
          format: uuid
          type: string
      required:
      - geometry
      - name
      - workspace_ref
      title: PlantingAreaCreateCommand
      type: object
    PlantingAreaDeleteCommand:
      properties:
        planting_area_id:
          format: uuid
          type: string
        workspace_ref:
          format: uuid
          type: string
      required:
      - planting_area_id
      - workspace_ref
      title: PlantingAreaDeleteCommand
      type: object
    PlantingAreaSchema:
      properties:
        depth:
          oneOf:
          - type: 'null'
          - type: number
        description:
          type: string
        geometries:
          $ref: '#/components/schemas/GeometricHistorySchema'
        id:
          format: uuid
          type: string
        location_history:
          $ref: '#/components/schemas/LocationHistorySchema'
        movable:
          type: boolean
        name:
          type: string
      required:
      - description
      - geometries
      - id
      - location_history
      - movable
      - name
      title: PlantingAreaSchema
      type: object
    PlantingAreaUpdateCommand:
      properties:
        description:
          oneOf:
          - type: 'null'
          - description: A description of this planting area. Must be at most 700
              characters
            maxLength: 700
            type: string
        geometries:
          $ref: '#/components/schemas/GeometricHistoryCreateUpdateCommand'
        name:
          oneOf:
          - type: 'null'
          - description: A descriptive name for this planting area. Must be between
              3 and 30 characters long and contain only alphanumeric characters, spaces,
              hyphens, and underscores.
            maxLength: 30
            minLength: 3
            pattern: '[0-9A-Za-z _-]+'
            type: string
        planting_area_id:
          format: uuid
          type: string
        workspace_ref:
          format: uuid
          type: string
      required:
      - geometries
      - planting_area_id
      - workspace_ref
      title: PlantingAreaUpdateCommand
      type: object
    PolygonAttributes:
      properties:
        hole_polygons:
          items:
            items:
              $ref: '#/components/schemas/Coordinate'
            type: array
          type: array
        shell_coordinates:
          items:
            $ref: '#/components/schemas/Coordinate'
          type: array
      required:
      - hole_polygons
      - shell_coordinates
      title: PolygonAttributes
      type: object
    PolygonAttributesCreateUpdateCommand:
      properties:
        coordinates:
          items:
            $ref: '#/components/schemas/CoordinateCreateUpdateCommand'
          type: array
      required:
      - coordinates
      title: PolygonAttributesCreateUpdateCommand
      type: object
    RectangleAttributes:
      properties:
        height:
          oneOf:
          - type: 'null'
          - type: number
        width:
          type: number
      required:
      - width
      title: RectangleAttributes
      type: object
    RectangleAttributesCreateUpdateCommand:
      properties:
        height:
          oneOf:
          - type: 'null'
          - type: number
        width:
          type: number
      required:
      - width
      title: RectangleAttributesCreateUpdateCommand
      type: object
    RefSchema:
      properties:
        id:
          format: uuid
          type: string
      required:
      - id
      title: RefSchema
      type: object
    UserConfirmEmailConfirmationCommand:
      properties:
        key:
          format: uuid
          type: string
      required:
      - key
      title: UserConfirmEmailConfirmationCommand
      type: object
    UserConfirmPasswordResetCommand:
      properties:
        key:
          format: uuid
          type: string
        new_password1:
          description: Must be between 6 and 255 characters long and contain at least
            one lowercase letter, one uppercase letter, one digit, and one special
            character
          maxLength: 255
          minLength: 6
          pattern: ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\W).*$
          type: string
        new_password2:
          description: Must be between 6 and 255 characters long and contain at least
            one lowercase letter, one uppercase letter, one digit, and one special
            character
          maxLength: 255
          minLength: 6
          pattern: ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\W).*$
          type: string
        user_id:
          format: uuid
          type: string
      required:
      - key
      - new_password1
      - new_password2
      - user_id
      title: UserConfirmPasswordResetCommand
      type: object
    UserCreateCommand:
      properties:
        email_address:
          format: email
          type: string
        password1:
          description: Must be between 6 and 255 characters long and contain at least
            one lowercase letter, one uppercase letter, one digit, and one special
            character
          maxLength: 255
          minLength: 6
          pattern: ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\W).*$
          type: string
        password2:
          description: Must be between 6 and 255 characters long and contain at least
            one lowercase letter, one uppercase letter, one digit, and one special
            character
          maxLength: 255
          minLength: 6
          pattern: ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\W).*$
          type: string
        username:
          description: Must be between 3 and 50 characters long and contain only alphanumeric
            characters and underscores. Must be unique
          maxLength: 50
          minLength: 3
          pattern: ^[a-zA-Z0-9_]*$
          type: string
      required:
      - email_address
      - password1
      - password2
      - username
      title: UserCreateCommand
      type: object
    UserEmailSchema:
      properties:
        address:
          type: string
        primary:
          type: boolean
        verified:
          type: boolean
      required:
      - address
      - primary
      - verified
      title: UserEmailSchema
      type: object
    UserFullSchema:
      properties:
        created_at:
          format: date-time
          type: string
        emails:
          items:
            $ref: '#/components/schemas/UserEmailSchema'
          type: array
        id:
          format: uuid
          type: string
        is_superuser:
          type: boolean
        username:
          type: string
      required:
      - created_at
      - emails
      - id
      - is_superuser
      - username
      title: UserFullSchema
      type: object
    UserPasswordVerificationQuery:
      properties:
        email_address:
          format: email
          type: string
        password:
          description: Must be between 6 and 255 characters long and contain at least
            one lowercase letter, one uppercase letter, one digit, and one special
            character
          maxLength: 255
          minLength: 6
          pattern: ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\W).*$
          type: string
      required:
      - email_address
      - password
      title: UserPasswordVerificationQuery
      type: object
    UserPublicSchema:
      properties:
        id:
          format: uuid
          type: string
        username:
          type: string
      required:
      - id
      - username
      title: UserPublicSchema
      type: object
    UserRequestEmailConfirmationCommand:
      properties:
        email_address:
          format: email
          type: string
      required:
      - email_address
      title: UserRequestEmailConfirmationCommand
      type: object
    UserRequestPasswordResetCommand:
      properties:
        email_address:
          format: email
          type: string
      required:
      - email_address
      title: UserRequestPasswordResetCommand
      type: object
    ValidationException:
      description: Validation Exception
      examples:
      - detail: Bad Request
        extra: {}
        status_code: 400
      properties:
        detail:
          type: string
        extra:
          anyOf:
          - additionalProperties: {}
            type: object
          - items: {}
            type: array
          - type: 'null'
        status_code:
          type: integer
      required:
      - detail
      - status_code
      type: object
    WorkspaceCreateCommand:
      properties:
        description:
          oneOf:
          - type: 'null'
          - description: A description of this workspace. Must be at most 700 characters
            maxLength: 700
            type: string
        garden_key:
          description: Must be between 4 and 16 characters long and contain only alphanumeric
            characters and hyphens
          maxLength: 16
          minLength: 4
          pattern: '[0-9A-Za-z-]+'
          type: string
        name:
          description: A descriptive name for this workspace. Must be between 3 and
            30 characters long and contain only alphanumeric characters, spaces, hyphens,
            and underscores.
          maxLength: 30
          minLength: 3
          pattern: '[0-9A-Za-z _-]+'
          type: string
      required:
      - garden_key
      - name
      title: WorkspaceCreateCommand
      type: object
    WorkspaceDeleteCommand:
      properties:
        workspace_ref:
          format: uuid
          type: string
      required:
      - workspace_ref
      title: WorkspaceDeleteCommand
      type: object
    WorkspaceFullSchema:
      properties:
        description:
          type: string
        garden_ref:
          $ref: '#/components/schemas/RefSchema'
        id:
          format: uuid
          type: string
        name:
          type: string
        planting_areas:
          items:
            $ref: '#/components/schemas/PlantingAreaSchema'
          type: array
        slug:
          type: string
      required:
      - description
      - garden_ref
      - id
      - name
      - planting_areas
      - slug
      title: WorkspaceFullSchema
      type: object
    WorkspacePartialSchema:
      properties:
        garden_ref:
          $ref: '#/components/schemas/RefSchema'
        id:
          format: uuid
          type: string
        name:
          type: string
        slug:
          type: string
      required:
      - garden_ref
      - id
      - name
      - slug
      title: WorkspacePartialSchema
      type: object
    WorkspaceUpdateCommand:
      properties:
        description:
          oneOf:
          - type: 'null'
          - description: A description of this workspace. Must be at most 700 characters
            maxLength: 700
            type: string
        name:
          oneOf:
          - type: 'null'
          - description: A descriptive name for this workspace. Must be between 3
              and 30 characters long and contain only alphanumeric characters, spaces,
              hyphens, and underscores.
            maxLength: 30
            minLength: 3
            pattern: '[0-9A-Za-z _-]+'
            type: string
        workspace_ref:
          format: uuid
          type: string
      required:
      - workspace_ref
      title: WorkspaceUpdateCommand
      type: object
externalDocs:
  description: Github Repository
  url: https://github.com/VerdanTech/VerdanTech-Backend
info:
  contact:
    name: Nathaniel King
  description: Backend API of the VerdanTech software project.
  license:
    name: GNU GPL v3.0
  title: VerdanTech-Backend
  version: 0.1.0
openapi: 3.1.0
paths:
  /cultivars/command/create_collection:
    post:
      deprecated: false
      description: Creates a new cultivar collection.
      operationId: CultivarCollectionCreateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CultivarCollectionCreateCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Cultivar collection create.
      tags:
      - cultivars
  /cultivars/command/create_cultivar:
    post:
      deprecated: false
      description: Creates a new cultivar on the collection.
      operationId: CultivarCreateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CultivarCreateCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Cultivar create.
      tags:
      - cultivars
  /cultivars/command/delete_collection:
    post:
      deprecated: false
      description: Deletes a cultivar collection.
      operationId: CultivarCollectionDeleteCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CultivarCollectionDeleteCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Cultivar collection delete.
      tags:
      - cultivars
  /cultivars/command/delete_cultivar:
    post:
      deprecated: false
      description: Deletes a given cultivar from a collection.
      operationId: CultivarDeleteCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CultivarDeleteCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Cultivar delete.
      tags:
      - cultivars
  /cultivars/command/duplicate_collection:
    post:
      deprecated: false
      description: Creates a new cultivar collection by copying the attributes of
        another.
      operationId: CultivarCollectionDuplicateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CultivarCollectionDuplicateCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Cultivar collection duplication.
      tags:
      - cultivars
  /cultivars/command/merge_collection:
    post:
      deprecated: false
      description: Copies the data of an exising cultivar collection into a another
        existing collection.
      operationId: CultivarCollectionMergeCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CultivarCollectionMergeCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Cultivar collection merge.
      tags:
      - cultivars
  /cultivars/command/update_collection:
    post:
      deprecated: false
      description: Sets the given attributes onto the cultivar collection.
      operationId: CultivarCollectionUpdateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CultivarCollectionUpdateCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Cultivar collection update.
      tags:
      - cultivars
  /cultivars/command/update_cultivar:
    post:
      deprecated: false
      description: Sets the given attributes onto the cultivar.
      operationId: CultivarUpdateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CultivarUpdateCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Cultivar update.
      tags:
      - cultivars
  /cultivars/query/get_by_client:
    get:
      deprecated: false
      description: Retrieves the cultivar collections associated with this garden.
      operationId: CultivarGetByClientQueryOp
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CultivarCollectionGetByClientResult'
          description: Request fulfilled, document follows
          headers: {}
      summary: Get cultivar collections from a garden.
      tags:
      - cultivars
  /cultivars/query/get_by_garden:
    get:
      deprecated: false
      description: Retrieves the cultivar collections associated with this garden.
      operationId: CultivarCollectionGetByGardenQueryOp
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: garden_key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CultivarCollectionGetByGardenResult'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Get cultivar collections from a garden.
      tags:
      - cultivars
  /cultivars/query/get_by_ids:
    get:
      deprecated: false
      description: Retrieves the cultivar collections associated with the IDs.
      operationId: CultivarCollectionGetByIdsQueryOp
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: ids
        required: true
        schema:
          items:
            format: uuid
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CultivarCollectionFullSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Get cultivar collections from their IDs.
      tags:
      - cultivars
  /gardens/command/accept_invite:
    post:
      deprecated: false
      description: Accepts a Garden Membership.
      operationId: GardenMembershipAcceptCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GardenMembershipAcceptCommand'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Garden membership invitiation acceptance.
      tags:
      - gardens
  /gardens/command/change_role:
    post:
      deprecated: false
      description: Changes the role on another's Garden Membership.
      operationId: GardenMembershipRoleChangeCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GardenMembershipRoleChangeCommand'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Garden Membership role change.
      tags:
      - gardens
  /gardens/command/create:
    post:
      deprecated: false
      description: Creates a new Garden and invites requested users.
      operationId: GardenCreateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GardenCreateCommand'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Garden creation.
      tags:
      - gardens
  /gardens/command/invite:
    post:
      deprecated: false
      description: Creates new Garden Memberships and sends email confirmation emails.
      operationId: GardenMembershipCreateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GardenMembershipCreateCommand'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Garden membership invitiation.
      tags:
      - gardens
  /gardens/command/leave:
    post:
      deprecated: false
      description: Removes one's own Garden Membership from a garden.
      operationId: GardenMembershipDeleteCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GardenMembershipDeleteCommand'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Garden membership deletion.
      tags:
      - gardens
  /gardens/command/revoke:
    post:
      deprecated: false
      description: Removes another's Garden Membership from a garden.
      operationId: GardenMembershipRevokeCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GardenMembershipRevokeCommand'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Removes a user from a garden.
      tags:
      - gardens
  /gardens/query/associated_partials:
    get:
      deprecated: false
      description: Returns a partial representation of all gardens that are associated
        with the client
      operationId: GardenAssociatedPartialsQueryOp
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GardenAssociatedPartialsResult'
          description: Request fulfilled, document follows
          headers: {}
      summary: Returns a partial representation of all gardens that are associated
        with the client
      tags:
      - gardens
  /gardens/query/full_by_key:
    get:
      deprecated: false
      description: Returns a full representation of gardens given by a key.
      operationId: GardenFullByKeyQueryOp
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: garden_key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GardenFullSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Returns a full representation of a garden by its key.
      tags:
      - gardens
  /gardens/query/generate_unique_key:
    get:
      deprecated: false
      description: Generates a unique garden key given a plant name and a random string.
      operationId: GardenGenerateUniqueKeyQueryOp
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GardenUniqueKeyResult'
          description: Request fulfilled, document follows
          headers: {}
      summary: Generate a new, unique garden key.
      tags:
      - gardens
  /gardens/query/most_relevant:
    get:
      deprecated: false
      description: Returns a partial representation of most relevant gardens to the
        user, ordered by relevance.
      operationId: GardenMostRelevantPartialsQueryOp
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: max_gardens
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GardenPartialSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Returns a partial representation of most relevant gardens to the user.
      tags:
      - gardens
  /gardens/query/partials_by_key:
    get:
      deprecated: false
      description: Returns a partial representation of gardens given by keys, provided
        they exist and the client is authorized to use them.
      operationId: GardenPartialsByKeysQueryOp
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: garden_keys
        required: true
        schema:
          items:
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GardenPartialSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Returns a partial representation of gardens given by keys.
      tags:
      - gardens
  /gardens/query/pending_invites:
    get:
      deprecated: false
      description: Returns a set of tuples of gardens and associated pending garden
        memberships
      operationId: GardenPendingInvitesQueryOp
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GardenPendingInvitesResult'
          description: Request fulfilled, document follows
          headers: {}
      summary: Returns a set of pending garden invites
      tags:
      - gardens
  /users/auth/login:
    post:
      deprecated: false
      description: Authenticate the request with JWT cookie authentication.
      operationId: UserLoginCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordVerificationQuery'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessInfoResult'
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: User login
      tags:
      - users
  /users/auth/refresh:
    post:
      deprecated: false
      description: Refresh the authentication process for security..
      operationId: UserRefreshCommandOp
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessInfoResult'
          description: Document created, URL follows
          headers: {}
      summary: User authentication refresh
      tags:
      - users
  /users/command/create:
    post:
      deprecated: false
      description: 'Registers a new user. Requires email confirmation: False.'
      operationId: UserCreateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: User registration.
      tags:
      - users
  /users/command/email/verification_confirm:
    post:
      deprecated: false
      description: Closes an email confirmation and verifies the email address.
      operationId: UserConfirmEmailConfirmationCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfirmEmailConfirmationCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: The email has been verified.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Email confirmation.
      tags:
      - users
  /users/command/email/verification_request:
    post:
      deprecated: false
      description: Requests a new email verification email be sent to the email address.
      operationId: UserRequestEmailConfirmationCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestEmailConfirmationCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: An email confirmation has been sent to the address.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Email confirmation request.
      tags:
      - users
  /users/command/password/confirm:
    post:
      deprecated: false
      description: Closes a password reset request and changes the password
      operationId: UserConfirmPasswordResetCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfirmPasswordResetCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: The password has been successfully updated.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Password reset confirm.
      tags:
      - users
  /users/command/password/request:
    post:
      deprecated: false
      description: Open a new password reset request and sends confirmation email.
      operationId: UserRequestPasswordResetCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestPasswordResetCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: A password reset confirmation has been sent to the email address,
            if it exists.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Password reset request.
      tags:
      - users
  /users/query/client_profile:
    get:
      deprecated: false
      description: Returns the profile of the authenticated user.
      operationId: UserClientProfileQueryOp
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFullSchema'
          description: The profile of the authenticated user.
          headers: {}
      summary: User client profile view.
      tags:
      - users
  /users/query/public_profiles:
    get:
      deprecated: false
      description: Returns the profiles of the user ids given.
      operationId: UserPublicProfilesQueryOp
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: user_ids
        required: true
        schema:
          items:
            format: uuid
            type: string
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserPublicSchema'
                type: array
          description: The list of users requested.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: User public profiles view.
      tags:
      - users
  /users/query/username_exists:
    get:
      deprecated: false
      description: Returns true if the given username exists.
      operationId: UsernameExistsQueryOp
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: username
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: True if the given username exists.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Checks whether a username exists.
      tags:
      - users
  /workspaces/command/create_planting_area:
    post:
      deprecated: false
      description: Creates a new planting area on the workspace.
      operationId: PlantingAreaCreateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlantingAreaCreateCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Planting area create.
      tags:
      - workspaces
  /workspaces/command/create_workspace:
    post:
      deprecated: false
      description: Creates a new workspace on the garden.
      operationId: WorkspaceCreateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Workspace create.
      tags:
      - workspaces
  /workspaces/command/delete_planting_area:
    post:
      deprecated: false
      description: Deletes a given planting area from a workspace.
      operationId: PlantingAreaDeleteCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlantingAreaDeleteCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Planting area delete.
      tags:
      - workspaces
  /workspaces/command/delete_workspace:
    post:
      deprecated: false
      description: Deletes a given workspace from a garden.
      operationId: WorkspaceDeleteCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceDeleteCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Workspace delete.
      tags:
      - workspaces
  /workspaces/command/update_planting_area:
    post:
      deprecated: false
      description: Sets the given attributes onto the planting area.
      operationId: PlantingAreaUpdateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlantingAreaUpdateCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Planting area update.
      tags:
      - workspaces
  /workspaces/command/update_workspace:
    post:
      deprecated: false
      description: Sets the given attributes onto the workspace.
      operationId: WorkspaceUpdateCommandOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateCommand'
        required: true
      responses:
        '201':
          content:
            text/plain:
              schema:
                type: string
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Workspace update.
      tags:
      - workspaces
  /workspaces/query/get_full:
    get:
      deprecated: false
      description: Retrieves a full workspace schema.
      operationId: WorkspaceGetFullQueryOp
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: garden_key
        required: true
        schema:
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: workspace_slug
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceFullSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Get a full workspace schema.
      tags:
      - workspaces
  /workspaces/query/get_partials:
    get:
      deprecated: false
      description: Retrieves the workspaces associated with this garden.
      operationId: WorkspaceGetPartialsQueryOp
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: garden_key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkspacePartialSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: Bad request syntax or unsupported method
      summary: Get workspaces from a garden.
      tags:
      - workspaces
servers:
- url: /
tags:
- name: users
- name: gardens
